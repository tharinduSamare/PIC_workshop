

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Oct 09 19:59:04 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F886 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133                           
   134                           	psect	idataBANK0
   135  02F8                     __pidataBANK0:	
   136                           
   137                           ;initializer for _init_pulse_width
   138  02F8  34FA               	retlw	250
   139  02F9  3400               	retlw	0
   140                           
   141                           ;initializer for _PWM_freq
   142  02FA  3488               	retlw	136
   143  02FB  3413               	retlw	19
   144  02FC  3400               	retlw	0
   145  02FD  3400               	retlw	0
   146  001E                     _ADRESH	set	30
   147  001F                     _ADCON0	set	31
   148  0015                     _CCPR1L	set	21
   149  0012                     _T2CONbits	set	18
   150  0017                     _CCP1CONbits	set	23
   151  00F9                     _GO_nDONE	set	249
   152  009E                     _ADRESL	set	158
   153  0085                     _TRISAbits	set	133
   154  009F                     _ADCON1	set	159
   155  0092                     _PR2	set	146
   156  0087                     _TRISC	set	135
   157  0086                     _TRISB	set	134
   158  0432                     _TRISB2	set	1074
   159  043A                     _TRISC2	set	1082
   160  0188                     _ANSELbits	set	392
   161  0189                     _ANSELH	set	393
   162  0188                     _ANSEL	set	392
   163                           
   164                           ; #config settings
   165  0000                     
   166                           	psect	cinit
   167  07DA                     start_initialization:	
   168  07DA                     __initialization:	
   169                           
   170                           ; Initialize objects allocated to BANK0
   171  07DA  120A  118A  22F8  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   172  07DF  00E4               	movwf	__pdataBANK0& (0+127)
   173  07E0  120A  118A  22F9  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   174  07E5  00E5               	movwf	(__pdataBANK0+1)& (0+127)
   175  07E6  120A  118A  22FA  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   176  07EB  00E6               	movwf	(__pdataBANK0+2)& (0+127)
   177  07EC  120A  118A  22FB  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   178  07F1  00E7               	movwf	(__pdataBANK0+3)& (0+127)
   179  07F2  120A  118A  22FC  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   180  07F7  00E8               	movwf	(__pdataBANK0+4)& (0+127)
   181  07F8  120A  118A  22FD   	fcall	__pidataBANK0+5	;fetch initializer
   182  07FB  00E9               	movwf	(__pdataBANK0+5)& (0+127)
   183  07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  07FC                     __end_of__initialization:	
   187  07FC  0183               	clrf	3
   188  07FD  120A  118A  2BDD   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	dataBANK0
   191  0064                     __pdataBANK0:	
   192  0064                     _init_pulse_width:	
   193  0064                     	ds	2
   194  0066                     _PWM_freq:	
   195  0066                     	ds	4
   196                           
   197                           	psect	cstackCOMMON
   198  0070                     __pcstackCOMMON:	
   199  0070                     ?_ADC_Initialize:	
   200  0070                     ??_ADC_Initialize:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_ADC_Read:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?___ftpack:	
   210                           ; 2 bytes @ 0x0
   211                           
   212  0070                     ?___aldiv:	
   213                           ; 3 bytes @ 0x0
   214                           
   215  0070                     ___ftpack@arg:	
   216                           ; 4 bytes @ 0x0
   217                           
   218  0070                     ___aldiv@divisor:	
   219                           ; 3 bytes @ 0x0
   220                           
   221                           
   222                           ; 4 bytes @ 0x0
   223  0070                     	ds	2
   224  0072                     ??_ADC_Read:	
   225                           
   226                           ; 1 bytes @ 0x2
   227  0072                     	ds	1
   228  0073                     ___ftpack@exp:	
   229                           
   230                           ; 1 bytes @ 0x3
   231  0073                     	ds	1
   232  0074                     ADC_Read@channel:	
   233  0074                     ___ftpack@sign:	
   234                           ; 1 bytes @ 0x4
   235                           
   236  0074                     ___aldiv@dividend:	
   237                           ; 1 bytes @ 0x4
   238                           
   239                           
   240                           ; 4 bytes @ 0x4
   241  0074                     	ds	1
   242  0075                     ??___ftpack:	
   243                           
   244                           ; 1 bytes @ 0x5
   245  0075                     	ds	3
   246  0078                     ??___aldiv:	
   247  0078                     ?___lwtoft:	
   248                           ; 1 bytes @ 0x8
   249                           
   250  0078                     ___lwtoft@c:	
   251                           ; 3 bytes @ 0x8
   252                           
   253                           
   254                           ; 2 bytes @ 0x8
   255  0078                     	ds	1
   256  0079                     ??___altoft:	
   257                           
   258                           ; 1 bytes @ 0x9
   259  0079                     	ds	2
   260  007B                     ??___lwtoft:	
   261  007B                     ___altoft@exp:	
   262                           ; 1 bytes @ 0xB
   263                           
   264                           
   265                           ; 1 bytes @ 0xB
   266  007B                     	ds	1
   267  007C                     ___altoft@sign:	
   268                           
   269                           ; 1 bytes @ 0xC
   270  007C                     	ds	1
   271                           
   272                           	psect	cstackBANK0
   273  0020                     __pcstackBANK0:	
   274  0020                     ?___ftdiv:	
   275  0020                     ___aldiv@counter:	
   276                           ; 3 bytes @ 0x0
   277                           
   278  0020                     ___ftdiv@f2:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 3 bytes @ 0x0
   283  0020                     	ds	1
   284  0021                     ___aldiv@sign:	
   285                           
   286                           ; 1 bytes @ 0x1
   287  0021                     	ds	1
   288  0022                     ___aldiv@quotient:	
   289                           
   290                           ; 4 bytes @ 0x2
   291  0022                     	ds	1
   292  0023                     ___ftdiv@f1:	
   293                           
   294                           ; 3 bytes @ 0x3
   295  0023                     	ds	3
   296  0026                     ??___ftdiv:	
   297  0026                     ?___altoft:	
   298                           ; 1 bytes @ 0x6
   299                           
   300  0026                     ___altoft@c:	
   301                           ; 3 bytes @ 0x6
   302                           
   303                           
   304                           ; 4 bytes @ 0x6
   305  0026                     	ds	4
   306  002A                     ___ftdiv@cntr:	
   307                           
   308                           ; 1 bytes @ 0xA
   309  002A                     	ds	1
   310  002B                     ___ftdiv@f3:	
   311                           
   312                           ; 3 bytes @ 0xB
   313  002B                     	ds	3
   314  002E                     ___ftdiv@exp:	
   315                           
   316                           ; 1 bytes @ 0xE
   317  002E                     	ds	1
   318  002F                     ___ftdiv@sign:	
   319                           
   320                           ; 1 bytes @ 0xF
   321  002F                     	ds	1
   322  0030                     ?___ftmul:	
   323  0030                     ___ftmul@f1:	
   324                           ; 3 bytes @ 0x10
   325                           
   326                           
   327                           ; 3 bytes @ 0x10
   328  0030                     	ds	3
   329  0033                     ___ftmul@f2:	
   330                           
   331                           ; 3 bytes @ 0x13
   332  0033                     	ds	3
   333  0036                     ??___ftmul:	
   334                           
   335                           ; 1 bytes @ 0x16
   336  0036                     	ds	4
   337  003A                     ___ftmul@exp:	
   338                           
   339                           ; 1 bytes @ 0x1A
   340  003A                     	ds	1
   341  003B                     ___ftmul@f3_as_product:	
   342                           
   343                           ; 3 bytes @ 0x1B
   344  003B                     	ds	3
   345  003E                     ___ftmul@cntr:	
   346                           
   347                           ; 1 bytes @ 0x1E
   348  003E                     	ds	1
   349  003F                     ___ftmul@sign:	
   350                           
   351                           ; 1 bytes @ 0x1F
   352  003F                     	ds	1
   353  0040                     ?___fttol:	
   354  0040                     ___fttol@f1:	
   355                           ; 4 bytes @ 0x20
   356                           
   357                           
   358                           ; 3 bytes @ 0x20
   359  0040                     	ds	4
   360  0044                     ??___fttol:	
   361                           
   362                           ; 1 bytes @ 0x24
   363  0044                     	ds	4
   364  0048                     ___fttol@sign1:	
   365                           
   366                           ; 1 bytes @ 0x28
   367  0048                     	ds	1
   368  0049                     ___fttol@lval:	
   369                           
   370                           ; 4 bytes @ 0x29
   371  0049                     	ds	4
   372  004D                     ___fttol@exp1:	
   373                           
   374                           ; 1 bytes @ 0x2D
   375  004D                     	ds	1
   376  004E                     ?_set_PWM_duty_cycle:	
   377  004E                     set_PWM_duty_cycle@duty:	
   378                           ; 1 bytes @ 0x2E
   379                           
   380                           
   381                           ; 2 bytes @ 0x2E
   382  004E                     	ds	2
   383  0050                     ??_set_PWM_duty_cycle:	
   384                           
   385                           ; 1 bytes @ 0x30
   386  0050                     	ds	4
   387  0054                     ?_PWM_Initialize:	
   388  0054                     PWM_Initialize@PWM_freq:	
   389                           ; 1 bytes @ 0x34
   390                           
   391                           
   392                           ; 4 bytes @ 0x34
   393  0054                     	ds	4
   394  0058                     PWM_Initialize@init_pulse_width:	
   395                           
   396                           ; 2 bytes @ 0x38
   397  0058                     	ds	2
   398  005A                     ??_PWM_Initialize:	
   399                           
   400                           ; 1 bytes @ 0x3A
   401  005A                     	ds	4
   402  005E                     ??_main:	
   403                           
   404                           ; 1 bytes @ 0x3E
   405  005E                     	ds	2
   406  0060                     main@adc_value:	
   407                           
   408                           ; 2 bytes @ 0x40
   409  0060                     	ds	2
   410  0062                     main@pulse_width:	
   411                           
   412                           ; 2 bytes @ 0x42
   413  0062                     	ds	2
   414                           
   415                           	psect	maintext
   416  03DD                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 19 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  pulse_width     2   66[BANK0 ] unsigned int 
   427 ;;  adc_value       2   64[BANK0 ] unsigned int 
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       4       0       0       0
   439 ;;      Temps:          0       2       0       0       0
   440 ;;      Totals:         0       6       0       0       0
   441 ;;Total ram usage:        6 bytes
   442 ;; Hardware stack levels required when called:    4
   443 ;; This function calls:
   444 ;;		_ADC_Initialize
   445 ;;		_ADC_Read
   446 ;;		_PWM_Initialize
   447 ;;		_set_PWM_duty_cycle
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           
   454                           ;psect for function _main
   455  03DD                     _main:	
   456                           
   457                           ;main.c: 20: uint16_t adc_value;
   458                           ;main.c: 21: uint16_t pulse_width = init_pulse_width;
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   462  03DD  1283               	bcf	3,5	;RP0=0, select bank0
   463  03DE  1303               	bcf	3,6	;RP1=0, select bank0
   464  03DF  0865               	movf	_init_pulse_width+1,w
   465  03E0  00E3               	movwf	main@pulse_width+1
   466  03E1  0864               	movf	_init_pulse_width,w
   467  03E2  00E2               	movwf	main@pulse_width
   468                           
   469                           ;main.c: 23: ANSEL = 0x00;
   470  03E3  1683               	bsf	3,5	;RP0=1, select bank3
   471  03E4  1703               	bsf	3,6	;RP1=1, select bank3
   472  03E5  0188               	clrf	8	;volatile
   473                           
   474                           ;main.c: 24: ANSELH = 0x00;
   475  03E6  0189               	clrf	9	;volatile
   476                           
   477                           ;main.c: 26: TRISB = 0x00;
   478  03E7  1683               	bsf	3,5	;RP0=1, select bank1
   479  03E8  1303               	bcf	3,6	;RP1=0, select bank1
   480  03E9  0186               	clrf	6	;volatile
   481                           
   482                           ;main.c: 27: TRISC = 0x00;
   483  03EA  0187               	clrf	7	;volatile
   484                           
   485                           ;main.c: 29: ADC_Initialize();
   486  03EB  120A  118A  22FE  120A  118A  	fcall	_ADC_Initialize
   487                           
   488                           ;main.c: 30: PWM_Initialize(PWM_freq, init_pulse_width );
   489  03F0  1283               	bcf	3,5	;RP0=0, select bank0
   490  03F1  1303               	bcf	3,6	;RP1=0, select bank0
   491  03F2  0869               	movf	_PWM_freq+3,w
   492  03F3  00D7               	movwf	PWM_Initialize@PWM_freq+3
   493  03F4  0868               	movf	_PWM_freq+2,w
   494  03F5  00D6               	movwf	PWM_Initialize@PWM_freq+2
   495  03F6  0867               	movf	_PWM_freq+1,w
   496  03F7  00D5               	movwf	PWM_Initialize@PWM_freq+1
   497  03F8  0866               	movf	_PWM_freq,w
   498  03F9  00D4               	movwf	PWM_Initialize@PWM_freq
   499  03FA  0865               	movf	_init_pulse_width+1,w
   500  03FB  00D9               	movwf	PWM_Initialize@init_pulse_width+1
   501  03FC  0864               	movf	_init_pulse_width,w
   502  03FD  00D8               	movwf	PWM_Initialize@init_pulse_width
   503  03FE  120A  118A  238C  120A  118A  	fcall	_PWM_Initialize
   504  0403                     l1119:	
   505                           ;main.c: 33: while (1){
   506                           
   507                           
   508                           ;main.c: 34: adc_value = ADC_Read(0);
   509  0403  3000               	movlw	0
   510  0404  120A  118A  2321  120A  118A  	fcall	_ADC_Read
   511  0409  0871               	movf	?_ADC_Read+1,w
   512  040A  1283               	bcf	3,5	;RP0=0, select bank0
   513  040B  1303               	bcf	3,6	;RP1=0, select bank0
   514  040C  00E1               	movwf	main@adc_value+1
   515  040D  0870               	movf	?_ADC_Read,w
   516  040E  00E0               	movwf	main@adc_value
   517                           
   518                           ;main.c: 35: if (adc_value != pulse_width){
   519  040F  0863               	movf	main@pulse_width+1,w
   520  0410  0661               	xorwf	main@adc_value+1,w
   521  0411  1D03               	skipz
   522  0412  2C15               	goto	u1285
   523  0413  0862               	movf	main@pulse_width,w
   524  0414  0660               	xorwf	main@adc_value,w
   525  0415                     u1285:	
   526  0415  1903               	skipnz
   527  0416  2C24               	goto	l1127
   528                           
   529                           ;main.c: 36: pulse_width = adc_value;
   530  0417  0861               	movf	main@adc_value+1,w
   531  0418  00E3               	movwf	main@pulse_width+1
   532  0419  0860               	movf	main@adc_value,w
   533  041A  00E2               	movwf	main@pulse_width
   534                           
   535                           ;main.c: 37: set_PWM_duty_cycle(pulse_width);
   536  041B  0863               	movf	main@pulse_width+1,w
   537  041C  00CF               	movwf	set_PWM_duty_cycle@duty+1
   538  041D  0862               	movf	main@pulse_width,w
   539  041E  00CE               	movwf	set_PWM_duty_cycle@duty
   540  041F  120A  118A  25B9  120A  118A  	fcall	_set_PWM_duty_cycle
   541  0424                     l1127:	
   542                           
   543                           ;main.c: 38: }
   544                           ;main.c: 39: _delay((unsigned long)((50)*(4000000/4000.0)));
   545  0424  3041               	movlw	65
   546  0425  1283               	bcf	3,5	;RP0=0, select bank0
   547  0426  1303               	bcf	3,6	;RP1=0, select bank0
   548  0427  00DF               	movwf	??_main+1
   549  0428  30ED               	movlw	237
   550  0429  00DE               	movwf	??_main
   551  042A                     u1297:	
   552  042A  0BDE               	decfsz	??_main,f
   553  042B  2C2A               	goto	u1297
   554  042C  0BDF               	decfsz	??_main+1,f
   555  042D  2C2A               	goto	u1297
   556  042E  2C2F               	nop2
   557  042F  2C03               	goto	l1119
   558  0430                     __end_of_main:	
   559                           
   560                           	psect	text1
   561  038C                     __ptext1:	
   562 ;; *************** function _PWM_Initialize *****************
   563 ;; Defined at:
   564 ;;		line 45 in file "main.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  PWM_freq        4   52[BANK0 ] long 
   567 ;;  init_pulse_w    2   56[BANK0 ] unsigned int 
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       6       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       4       0       0       0
   582 ;;      Totals:         0      10       0       0       0
   583 ;;Total ram usage:       10 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		___aldiv
   588 ;;		_set_PWM_duty_cycle
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           
   595                           ;psect for function _PWM_Initialize
   596  038C                     _PWM_Initialize:	
   597                           
   598                           ;main.c: 47: PR2 = (unsigned)((4000000/(PWM_freq*4*4)) - 1);
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
   602  038C  1283               	bcf	3,5	;RP0=0, select bank0
   603  038D  1303               	bcf	3,6	;RP1=0, select bank0
   604  038E  0854               	movf	PWM_Initialize@PWM_freq,w
   605  038F  00DA               	movwf	??_PWM_Initialize
   606  0390  0855               	movf	PWM_Initialize@PWM_freq+1,w
   607  0391  00DB               	movwf	??_PWM_Initialize+1
   608  0392  0856               	movf	PWM_Initialize@PWM_freq+2,w
   609  0393  00DC               	movwf	??_PWM_Initialize+2
   610  0394  0857               	movf	PWM_Initialize@PWM_freq+3,w
   611  0395  00DD               	movwf	??_PWM_Initialize+3
   612  0396  3002               	movlw	2
   613  0397                     u1245:	
   614  0397  1003               	clrc
   615  0398  0DDA               	rlf	??_PWM_Initialize,f
   616  0399  0DDB               	rlf	??_PWM_Initialize+1,f
   617  039A  0DDC               	rlf	??_PWM_Initialize+2,f
   618  039B  0DDD               	rlf	??_PWM_Initialize+3,f
   619  039C  3EFF               	addlw	-1
   620  039D  1D03               	skipz
   621  039E  2B97               	goto	u1245
   622  039F  3002               	movlw	2
   623  03A0                     u1255:	
   624  03A0  1003               	clrc
   625  03A1  0DDA               	rlf	??_PWM_Initialize,f
   626  03A2  0DDB               	rlf	??_PWM_Initialize+1,f
   627  03A3  0DDC               	rlf	??_PWM_Initialize+2,f
   628  03A4  0DDD               	rlf	??_PWM_Initialize+3,f
   629  03A5  3EFF               	addlw	-1
   630  03A6  1D03               	skipz
   631  03A7  2BA0               	goto	u1255
   632  03A8  085D               	movf	??_PWM_Initialize+3,w
   633  03A9  00F3               	movwf	___aldiv@divisor+3
   634  03AA  085C               	movf	??_PWM_Initialize+2,w
   635  03AB  00F2               	movwf	___aldiv@divisor+2
   636  03AC  085B               	movf	??_PWM_Initialize+1,w
   637  03AD  00F1               	movwf	___aldiv@divisor+1
   638  03AE  085A               	movf	??_PWM_Initialize,w
   639  03AF  00F0               	movwf	___aldiv@divisor
   640  03B0  3000               	movlw	0
   641  03B1  00F7               	movwf	___aldiv@dividend+3
   642  03B2  303D               	movlw	61
   643  03B3  00F6               	movwf	___aldiv@dividend+2
   644  03B4  3009               	movlw	9
   645  03B5  00F5               	movwf	___aldiv@dividend+1
   646  03B6  3000               	movlw	0
   647  03B7  00F4               	movwf	___aldiv@dividend
   648  03B8  120A  118A  252A  120A  118A  	fcall	___aldiv
   649  03BD  0870               	movf	?___aldiv,w
   650  03BE  3EFF               	addlw	255
   651  03BF  1683               	bsf	3,5	;RP0=1, select bank1
   652  03C0  1303               	bcf	3,6	;RP1=0, select bank1
   653  03C1  0092               	movwf	18	;volatile
   654                           
   655                           ;main.c: 48: CCP1CONbits.P1M = 0b10;
   656  03C2  1283               	bcf	3,5	;RP0=0, select bank0
   657  03C3  1303               	bcf	3,6	;RP1=0, select bank0
   658  03C4  0817               	movf	23,w	;volatile
   659  03C5  393F               	andlw	-193
   660  03C6  3880               	iorlw	128
   661  03C7  0097               	movwf	23	;volatile
   662                           
   663                           ;main.c: 49: CCP1CONbits.CCP1M = 0b1101;
   664  03C8  0817               	movf	23,w	;volatile
   665  03C9  39F0               	andlw	-16
   666  03CA  380D               	iorlw	13
   667  03CB  0097               	movwf	23	;volatile
   668                           
   669                           ;main.c: 52: T2CONbits.T2CKPS = 0b01;
   670  03CC  0812               	movf	18,w	;volatile
   671  03CD  39FC               	andlw	-4
   672  03CE  3801               	iorlw	1
   673  03CF  0092               	movwf	18	;volatile
   674                           
   675                           ;main.c: 53: T2CONbits.TMR2ON = 0b1;
   676  03D0  1512               	bsf	18,2	;volatile
   677                           
   678                           ;main.c: 57: set_PWM_duty_cycle(init_pulse_width);
   679  03D1  0859               	movf	PWM_Initialize@init_pulse_width+1,w
   680  03D2  00CF               	movwf	set_PWM_duty_cycle@duty+1
   681  03D3  0858               	movf	PWM_Initialize@init_pulse_width,w
   682  03D4  00CE               	movwf	set_PWM_duty_cycle@duty
   683  03D5  120A  118A  25B9   	fcall	_set_PWM_duty_cycle
   684                           
   685                           ;main.c: 59: TRISC2 = 0;
   686  03D8  1683               	bsf	3,5	;RP0=1, select bank1
   687  03D9  1303               	bcf	3,6	;RP1=0, select bank1
   688  03DA  1107               	bcf	7,2	;volatile
   689                           
   690                           ;main.c: 60: TRISB2 = 0;
   691  03DB  1106               	bcf	6,2	;volatile
   692  03DC  0008               	return
   693  03DD                     __end_of_PWM_Initialize:	
   694                           ;main.c: 62: return;
   695                           
   696                           
   697                           	psect	text2
   698  05B9                     __ptext2:	
   699 ;; *************** function _set_PWM_duty_cycle *****************
   700 ;; Defined at:
   701 ;;		line 65 in file "main.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  duty            2   46[BANK0 ] unsigned int 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       2       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          0       4       0       0       0
   718 ;;      Totals:         0       6       0       0       0
   719 ;;Total ram usage:        6 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    2
   722 ;; This function calls:
   723 ;;		___aldiv
   724 ;;		___altoft
   725 ;;		___ftdiv
   726 ;;		___ftmul
   727 ;;		___fttol
   728 ;;		___lwtoft
   729 ;; This function is called by:
   730 ;;		_main
   731 ;;		_PWM_Initialize
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           
   736                           ;psect for function _set_PWM_duty_cycle
   737  05B9                     _set_PWM_duty_cycle:	
   738                           
   739                           ;main.c: 66: if(duty<1023){
   740                           
   741                           ;incstack = 0
   742                           ; Regs used in _set_PWM_duty_cycle: [wreg+status,2+status,0+pclath+cstack]
   743  05B9  3003               	movlw	3
   744  05BA  1283               	bcf	3,5	;RP0=0, select bank0
   745  05BB  1303               	bcf	3,6	;RP1=0, select bank0
   746  05BC  024F               	subwf	set_PWM_duty_cycle@duty+1,w
   747  05BD  30FF               	movlw	255
   748  05BE  1903               	skipnz
   749  05BF  024E               	subwf	set_PWM_duty_cycle@duty,w
   750  05C0  1803               	skipnc
   751  05C1  0008               	return
   752                           
   753                           ;main.c: 67: duty = (uint16_t)(((float)duty/1023)*(4000000/(PWM_freq*4)));
   754  05C2  084F               	movf	set_PWM_duty_cycle@duty+1,w
   755  05C3  00F9               	movwf	___lwtoft@c+1
   756  05C4  084E               	movf	set_PWM_duty_cycle@duty,w
   757  05C5  00F8               	movwf	___lwtoft@c
   758  05C6  120A  118A  230D  120A  118A  	fcall	___lwtoft
   759  05CB  0878               	movf	?___lwtoft,w
   760  05CC  1283               	bcf	3,5	;RP0=0, select bank0
   761  05CD  1303               	bcf	3,6	;RP1=0, select bank0
   762  05CE  00A3               	movwf	___ftdiv@f1
   763  05CF  0879               	movf	?___lwtoft+1,w
   764  05D0  00A4               	movwf	___ftdiv@f1+1
   765  05D1  087A               	movf	?___lwtoft+2,w
   766  05D2  00A5               	movwf	___ftdiv@f1+2
   767  05D3  30C0               	movlw	192
   768  05D4  00A0               	movwf	___ftdiv@f2
   769  05D5  307F               	movlw	127
   770  05D6  00A1               	movwf	___ftdiv@f2+1
   771  05D7  3044               	movlw	68
   772  05D8  00A2               	movwf	___ftdiv@f2+2
   773  05D9  120A  118A  264F  120A  118A  	fcall	___ftdiv
   774  05DE  1283               	bcf	3,5	;RP0=0, select bank0
   775  05DF  1303               	bcf	3,6	;RP1=0, select bank0
   776  05E0  0820               	movf	?___ftdiv,w
   777  05E1  00B3               	movwf	___ftmul@f2
   778  05E2  0821               	movf	?___ftdiv+1,w
   779  05E3  00B4               	movwf	___ftmul@f2+1
   780  05E4  0822               	movf	?___ftdiv+2,w
   781  05E5  00B5               	movwf	___ftmul@f2+2
   782  05E6  3000               	movlw	0
   783  05E7  00F7               	movwf	___aldiv@dividend+3
   784  05E8  303D               	movlw	61
   785  05E9  00F6               	movwf	___aldiv@dividend+2
   786  05EA  3009               	movlw	9
   787  05EB  00F5               	movwf	___aldiv@dividend+1
   788  05EC  3000               	movlw	0
   789  05ED  00F4               	movwf	___aldiv@dividend
   790  05EE  0866               	movf	_PWM_freq,w
   791  05EF  00D0               	movwf	??_set_PWM_duty_cycle
   792  05F0  0867               	movf	_PWM_freq+1,w
   793  05F1  00D1               	movwf	??_set_PWM_duty_cycle+1
   794  05F2  0868               	movf	_PWM_freq+2,w
   795  05F3  00D2               	movwf	??_set_PWM_duty_cycle+2
   796  05F4  0869               	movf	_PWM_freq+3,w
   797  05F5  00D3               	movwf	??_set_PWM_duty_cycle+3
   798  05F6  3002               	movlw	2
   799  05F7                     u1235:	
   800  05F7  1003               	clrc
   801  05F8  0DD0               	rlf	??_set_PWM_duty_cycle,f
   802  05F9  0DD1               	rlf	??_set_PWM_duty_cycle+1,f
   803  05FA  0DD2               	rlf	??_set_PWM_duty_cycle+2,f
   804  05FB  0DD3               	rlf	??_set_PWM_duty_cycle+3,f
   805  05FC  3EFF               	addlw	-1
   806  05FD  1D03               	skipz
   807  05FE  2DF7               	goto	u1235
   808  05FF  0853               	movf	??_set_PWM_duty_cycle+3,w
   809  0600  00F3               	movwf	___aldiv@divisor+3
   810  0601  0852               	movf	??_set_PWM_duty_cycle+2,w
   811  0602  00F2               	movwf	___aldiv@divisor+2
   812  0603  0851               	movf	??_set_PWM_duty_cycle+1,w
   813  0604  00F1               	movwf	___aldiv@divisor+1
   814  0605  0850               	movf	??_set_PWM_duty_cycle,w
   815  0606  00F0               	movwf	___aldiv@divisor
   816  0607  120A  118A  252A  120A  118A  	fcall	___aldiv
   817  060C  0873               	movf	?___aldiv+3,w
   818  060D  1283               	bcf	3,5	;RP0=0, select bank0
   819  060E  1303               	bcf	3,6	;RP1=0, select bank0
   820  060F  00A9               	movwf	___altoft@c+3
   821  0610  0872               	movf	?___aldiv+2,w
   822  0611  00A8               	movwf	___altoft@c+2
   823  0612  0871               	movf	?___aldiv+1,w
   824  0613  00A7               	movwf	___altoft@c+1
   825  0614  0870               	movf	?___aldiv,w
   826  0615  00A6               	movwf	___altoft@c
   827  0616  120A  118A  234A  120A  118A  	fcall	___altoft
   828  061B  1283               	bcf	3,5	;RP0=0, select bank0
   829  061C  1303               	bcf	3,6	;RP1=0, select bank0
   830  061D  0826               	movf	?___altoft,w
   831  061E  00B0               	movwf	___ftmul@f1
   832  061F  0827               	movf	?___altoft+1,w
   833  0620  00B1               	movwf	___ftmul@f1+1
   834  0621  0828               	movf	?___altoft+2,w
   835  0622  00B2               	movwf	___ftmul@f1+2
   836  0623  120A  118A  2707  120A  118A  	fcall	___ftmul
   837  0628  1283               	bcf	3,5	;RP0=0, select bank0
   838  0629  1303               	bcf	3,6	;RP1=0, select bank0
   839  062A  0830               	movf	?___ftmul,w
   840  062B  00C0               	movwf	___fttol@f1
   841  062C  0831               	movf	?___ftmul+1,w
   842  062D  00C1               	movwf	___fttol@f1+1
   843  062E  0832               	movf	?___ftmul+2,w
   844  062F  00C2               	movwf	___fttol@f1+2
   845  0630  120A  118A  249C   	fcall	___fttol
   846  0633  1283               	bcf	3,5	;RP0=0, select bank0
   847  0634  1303               	bcf	3,6	;RP1=0, select bank0
   848  0635  0841               	movf	?___fttol+1,w
   849  0636  00CF               	movwf	set_PWM_duty_cycle@duty+1
   850  0637  0840               	movf	?___fttol,w
   851  0638  00CE               	movwf	set_PWM_duty_cycle@duty
   852                           
   853                           ;main.c: 69: CCP1CONbits.DC1B = duty & 0b00000011;
   854  0639  084E               	movf	set_PWM_duty_cycle@duty,w
   855  063A  3903               	andlw	3
   856  063B  00D0               	movwf	??_set_PWM_duty_cycle
   857  063C  0ED0               	swapf	??_set_PWM_duty_cycle,f
   858  063D  0817               	movf	23,w	;volatile
   859  063E  0650               	xorwf	??_set_PWM_duty_cycle,w
   860  063F  39CF               	andlw	-49
   861  0640  0650               	xorwf	??_set_PWM_duty_cycle,w
   862  0641  0097               	movwf	23	;volatile
   863                           
   864                           ;main.c: 70: CCPR1L = duty>>2;
   865  0642  084F               	movf	set_PWM_duty_cycle@duty+1,w
   866  0643  00D1               	movwf	??_set_PWM_duty_cycle+1
   867  0644  084E               	movf	set_PWM_duty_cycle@duty,w
   868  0645  00D0               	movwf	??_set_PWM_duty_cycle
   869  0646  1003               	clrc
   870  0647  0CD1               	rrf	??_set_PWM_duty_cycle+1,f
   871  0648  0CD0               	rrf	??_set_PWM_duty_cycle,f
   872  0649  1003               	clrc
   873  064A  0CD1               	rrf	??_set_PWM_duty_cycle+1,f
   874  064B  0CD0               	rrf	??_set_PWM_duty_cycle,f
   875  064C  0850               	movf	??_set_PWM_duty_cycle,w
   876  064D  0095               	movwf	21	;volatile
   877  064E  0008               	return
   878  064F                     __end_of_set_PWM_duty_cycle:	
   879                           ;main.c: 71: }
   880                           ;main.c: 72: return;
   881                           
   882                           
   883                           	psect	text3
   884  030D                     __ptext3:	
   885 ;; *************** function ___lwtoft *****************
   886 ;; Defined at:
   887 ;;		line 28 in file "E:\software\pic\XC8\sources\common\lwtoft.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  c               2    8[COMMON] unsigned int 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  3    8[COMMON] float 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         3       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          1       0       0       0       0
   904 ;;      Totals:         4       0       0       0       0
   905 ;;Total ram usage:        4 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    1
   908 ;; This function calls:
   909 ;;		___ftpack
   910 ;; This function is called by:
   911 ;;		_set_PWM_duty_cycle
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function ___lwtoft
   917  030D                     ___lwtoft:	
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   921  030D  0878               	movf	___lwtoft@c,w
   922  030E  00F0               	movwf	___ftpack@arg
   923  030F  0879               	movf	___lwtoft@c+1,w
   924  0310  00F1               	movwf	___ftpack@arg+1
   925  0311  01F2               	clrf	___ftpack@arg+2
   926  0312  308E               	movlw	142
   927  0313  00FB               	movwf	??___lwtoft
   928  0314  087B               	movf	??___lwtoft,w
   929  0315  00F3               	movwf	___ftpack@exp
   930  0316  01F4               	clrf	___ftpack@sign
   931  0317  120A  118A  2430   	fcall	___ftpack
   932  031A  0870               	movf	?___ftpack,w
   933  031B  00F8               	movwf	?___lwtoft
   934  031C  0871               	movf	?___ftpack+1,w
   935  031D  00F9               	movwf	?___lwtoft+1
   936  031E  0872               	movf	?___ftpack+2,w
   937  031F  00FA               	movwf	?___lwtoft+2
   938  0320  0008               	return
   939  0321                     __end_of___lwtoft:	
   940                           
   941                           	psect	text4
   942  049C                     __ptext4:	
   943 ;; *************** function ___fttol *****************
   944 ;; Defined at:
   945 ;;		line 44 in file "E:\software\pic\XC8\sources\common\fttol.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  f1              3   32[BANK0 ] float 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  lval            4   41[BANK0 ] unsigned long 
   950 ;;  exp1            1   45[BANK0 ] unsigned char 
   951 ;;  sign1           1   40[BANK0 ] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  4   32[BANK0 ] long 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       4       0       0       0
   962 ;;      Locals:         0       6       0       0       0
   963 ;;      Temps:          0       4       0       0       0
   964 ;;      Totals:         0      14       0       0       0
   965 ;;Total ram usage:       14 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_set_PWM_duty_cycle
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function ___fttol
   976  049C                     ___fttol:	
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   980  049C  1283               	bcf	3,5	;RP0=0, select bank0
   981  049D  1303               	bcf	3,6	;RP1=0, select bank0
   982  049E  0840               	movf	___fttol@f1,w
   983  049F  00C4               	movwf	??___fttol
   984  04A0  0841               	movf	___fttol@f1+1,w
   985  04A1  00C5               	movwf	??___fttol+1
   986  04A2  0842               	movf	___fttol@f1+2,w
   987  04A3  00C6               	movwf	??___fttol+2
   988  04A4  1003               	clrc
   989  04A5  0D45               	rlf	??___fttol+1,w
   990  04A6  0D46               	rlf	??___fttol+2,w
   991  04A7  00C7               	movwf	??___fttol+3
   992  04A8  0847               	movf	??___fttol+3,w
   993  04A9  00CD               	movwf	___fttol@exp1
   994  04AA  084D               	movf	___fttol@exp1,w
   995  04AB  1D03               	btfss	3,2
   996  04AC  2CB6               	goto	l1019
   997  04AD  3000               	movlw	0
   998  04AE  00C3               	movwf	?___fttol+3
   999  04AF  3000               	movlw	0
  1000  04B0  00C2               	movwf	?___fttol+2
  1001  04B1  3000               	movlw	0
  1002  04B2  00C1               	movwf	?___fttol+1
  1003  04B3  3000               	movlw	0
  1004  04B4  00C0               	movwf	?___fttol
  1005  04B5  0008               	return
  1006  04B6                     l1019:	
  1007  04B6  0840               	movf	___fttol@f1,w
  1008  04B7  00C4               	movwf	??___fttol
  1009  04B8  0841               	movf	___fttol@f1+1,w
  1010  04B9  00C5               	movwf	??___fttol+1
  1011  04BA  0842               	movf	___fttol@f1+2,w
  1012  04BB  00C6               	movwf	??___fttol+2
  1013  04BC  3017               	movlw	23
  1014  04BD                     u1135:	
  1015  04BD  1003               	clrc
  1016  04BE  0CC6               	rrf	??___fttol+2,f
  1017  04BF  0CC5               	rrf	??___fttol+1,f
  1018  04C0  0CC4               	rrf	??___fttol,f
  1019  04C1  3EFF               	addlw	-1
  1020  04C2  1D03               	skipz
  1021  04C3  2CBD               	goto	u1135
  1022  04C4  0844               	movf	??___fttol,w
  1023  04C5  00C7               	movwf	??___fttol+3
  1024  04C6  0847               	movf	??___fttol+3,w
  1025  04C7  00C8               	movwf	___fttol@sign1
  1026  04C8  17C1               	bsf	___fttol@f1+1,7
  1027  04C9  30FF               	movlw	255
  1028  04CA  05C0               	andwf	___fttol@f1,f
  1029  04CB  30FF               	movlw	255
  1030  04CC  05C1               	andwf	___fttol@f1+1,f
  1031  04CD  3000               	movlw	0
  1032  04CE  05C2               	andwf	___fttol@f1+2,f
  1033  04CF  0840               	movf	___fttol@f1,w
  1034  04D0  00C9               	movwf	___fttol@lval
  1035  04D1  0841               	movf	___fttol@f1+1,w
  1036  04D2  00CA               	movwf	___fttol@lval+1
  1037  04D3  0842               	movf	___fttol@f1+2,w
  1038  04D4  00CB               	movwf	___fttol@lval+2
  1039  04D5  01CC               	clrf	___fttol@lval+3
  1040  04D6  308E               	movlw	142
  1041  04D7  02CD               	subwf	___fttol@exp1,f
  1042  04D8  1FCD               	btfss	___fttol@exp1,7
  1043  04D9  2CF8               	goto	l1039
  1044  04DA  084D               	movf	___fttol@exp1,w
  1045  04DB  3A80               	xorlw	128
  1046  04DC  3E8F               	addlw	143
  1047  04DD  1803               	skipnc
  1048  04DE  2CE8               	goto	l1037
  1049  04DF  3000               	movlw	0
  1050  04E0  00C3               	movwf	?___fttol+3
  1051  04E1  3000               	movlw	0
  1052  04E2  00C2               	movwf	?___fttol+2
  1053  04E3  3000               	movlw	0
  1054  04E4  00C1               	movwf	?___fttol+1
  1055  04E5  3000               	movlw	0
  1056  04E6  00C0               	movwf	?___fttol
  1057  04E7  0008               	return
  1058  04E8                     l1037:	
  1059  04E8  3001               	movlw	1
  1060  04E9                     u1165:	
  1061  04E9  1003               	clrc
  1062  04EA  0CCC               	rrf	___fttol@lval+3,f
  1063  04EB  0CCB               	rrf	___fttol@lval+2,f
  1064  04EC  0CCA               	rrf	___fttol@lval+1,f
  1065  04ED  0CC9               	rrf	___fttol@lval,f
  1066  04EE  3EFF               	addlw	-1
  1067  04EF  1D03               	skipz
  1068  04F0  2CE9               	goto	u1165
  1069  04F1  3001               	movlw	1
  1070  04F2  00C4               	movwf	??___fttol
  1071  04F3  0844               	movf	??___fttol,w
  1072  04F4  07CD               	addwf	___fttol@exp1,f
  1073  04F5  1903               	btfsc	3,2
  1074  04F6  2D13               	goto	l1047
  1075  04F7  2CE8               	goto	l1037
  1076  04F8                     l1039:	
  1077  04F8  3018               	movlw	24
  1078  04F9  024D               	subwf	___fttol@exp1,w
  1079  04FA  1C03               	skipc
  1080  04FB  2D10               	goto	l409
  1081  04FC  3000               	movlw	0
  1082  04FD  00C3               	movwf	?___fttol+3
  1083  04FE  3000               	movlw	0
  1084  04FF  00C2               	movwf	?___fttol+2
  1085  0500  3000               	movlw	0
  1086  0501  00C1               	movwf	?___fttol+1
  1087  0502  3000               	movlw	0
  1088  0503  00C0               	movwf	?___fttol
  1089  0504  0008               	return
  1090  0505                     l1045:	
  1091  0505  3001               	movlw	1
  1092  0506  00C4               	movwf	??___fttol
  1093  0507                     u1195:	
  1094  0507  1003               	clrc
  1095  0508  0DC9               	rlf	___fttol@lval,f
  1096  0509  0DCA               	rlf	___fttol@lval+1,f
  1097  050A  0DCB               	rlf	___fttol@lval+2,f
  1098  050B  0DCC               	rlf	___fttol@lval+3,f
  1099  050C  0BC4               	decfsz	??___fttol,f
  1100  050D  2D07               	goto	u1195
  1101  050E  3001               	movlw	1
  1102  050F  02CD               	subwf	___fttol@exp1,f
  1103  0510                     l409:	
  1104  0510  084D               	movf	___fttol@exp1,w
  1105  0511  1D03               	btfss	3,2
  1106  0512  2D05               	goto	l1045
  1107  0513                     l1047:	
  1108  0513  0848               	movf	___fttol@sign1,w
  1109  0514  1903               	btfsc	3,2
  1110  0515  2D21               	goto	l1051
  1111  0516  09C9               	comf	___fttol@lval,f
  1112  0517  09CA               	comf	___fttol@lval+1,f
  1113  0518  09CB               	comf	___fttol@lval+2,f
  1114  0519  09CC               	comf	___fttol@lval+3,f
  1115  051A  0AC9               	incf	___fttol@lval,f
  1116  051B  1903               	skipnz
  1117  051C  0ACA               	incf	___fttol@lval+1,f
  1118  051D  1903               	skipnz
  1119  051E  0ACB               	incf	___fttol@lval+2,f
  1120  051F  1903               	skipnz
  1121  0520  0ACC               	incf	___fttol@lval+3,f
  1122  0521                     l1051:	
  1123  0521  084C               	movf	___fttol@lval+3,w
  1124  0522  00C3               	movwf	?___fttol+3
  1125  0523  084B               	movf	___fttol@lval+2,w
  1126  0524  00C2               	movwf	?___fttol+2
  1127  0525  084A               	movf	___fttol@lval+1,w
  1128  0526  00C1               	movwf	?___fttol+1
  1129  0527  0849               	movf	___fttol@lval,w
  1130  0528  00C0               	movwf	?___fttol
  1131  0529  0008               	return
  1132  052A                     __end_of___fttol:	
  1133                           
  1134                           	psect	text5
  1135  0707                     __ptext5:	
  1136 ;; *************** function ___ftmul *****************
  1137 ;; Defined at:
  1138 ;;		line 62 in file "E:\software\pic\XC8\sources\common\ftmul.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  f1              3   16[BANK0 ] float 
  1141 ;;  f2              3   19[BANK0 ] float 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  1144 ;;  sign            1   31[BANK0 ] unsigned char 
  1145 ;;  cntr            1   30[BANK0 ] unsigned char 
  1146 ;;  exp             1   26[BANK0 ] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  3   16[BANK0 ] float 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0, pclath, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         0       6       0       0       0
  1157 ;;      Locals:         0       6       0       0       0
  1158 ;;      Temps:          0       4       0       0       0
  1159 ;;      Totals:         0      16       0       0       0
  1160 ;;Total ram usage:       16 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    1
  1163 ;; This function calls:
  1164 ;;		___ftpack
  1165 ;; This function is called by:
  1166 ;;		_set_PWM_duty_cycle
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function ___ftmul
  1172  0707                     ___ftmul:	
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1176  0707  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0708  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0709  0830               	movf	___ftmul@f1,w
  1179  070A  00B6               	movwf	??___ftmul
  1180  070B  0831               	movf	___ftmul@f1+1,w
  1181  070C  00B7               	movwf	??___ftmul+1
  1182  070D  0832               	movf	___ftmul@f1+2,w
  1183  070E  00B8               	movwf	??___ftmul+2
  1184  070F  1003               	clrc
  1185  0710  0D37               	rlf	??___ftmul+1,w
  1186  0711  0D38               	rlf	??___ftmul+2,w
  1187  0712  00B9               	movwf	??___ftmul+3
  1188  0713  0839               	movf	??___ftmul+3,w
  1189  0714  00BA               	movwf	___ftmul@exp
  1190  0715  083A               	movf	___ftmul@exp,w
  1191  0716  1D03               	btfss	3,2
  1192  0717  2F1F               	goto	l969
  1193  0718  3000               	movlw	0
  1194  0719  00B0               	movwf	?___ftmul
  1195  071A  3000               	movlw	0
  1196  071B  00B1               	movwf	?___ftmul+1
  1197  071C  3000               	movlw	0
  1198  071D  00B2               	movwf	?___ftmul+2
  1199  071E  0008               	return
  1200  071F                     l969:	
  1201  071F  0833               	movf	___ftmul@f2,w
  1202  0720  00B6               	movwf	??___ftmul
  1203  0721  0834               	movf	___ftmul@f2+1,w
  1204  0722  00B7               	movwf	??___ftmul+1
  1205  0723  0835               	movf	___ftmul@f2+2,w
  1206  0724  00B8               	movwf	??___ftmul+2
  1207  0725  1003               	clrc
  1208  0726  0D37               	rlf	??___ftmul+1,w
  1209  0727  0D38               	rlf	??___ftmul+2,w
  1210  0728  00B9               	movwf	??___ftmul+3
  1211  0729  0839               	movf	??___ftmul+3,w
  1212  072A  00BF               	movwf	___ftmul@sign
  1213  072B  083F               	movf	___ftmul@sign,w
  1214  072C  1D03               	btfss	3,2
  1215  072D  2F35               	goto	l975
  1216  072E  3000               	movlw	0
  1217  072F  00B0               	movwf	?___ftmul
  1218  0730  3000               	movlw	0
  1219  0731  00B1               	movwf	?___ftmul+1
  1220  0732  3000               	movlw	0
  1221  0733  00B2               	movwf	?___ftmul+2
  1222  0734  0008               	return
  1223  0735                     l975:	
  1224  0735  083F               	movf	___ftmul@sign,w
  1225  0736  3E7B               	addlw	123
  1226  0737  00B6               	movwf	??___ftmul
  1227  0738  0836               	movf	??___ftmul,w
  1228  0739  07BA               	addwf	___ftmul@exp,f
  1229  073A  0830               	movf	___ftmul@f1,w
  1230  073B  00B6               	movwf	??___ftmul
  1231  073C  0831               	movf	___ftmul@f1+1,w
  1232  073D  00B7               	movwf	??___ftmul+1
  1233  073E  0832               	movf	___ftmul@f1+2,w
  1234  073F  00B8               	movwf	??___ftmul+2
  1235  0740  3010               	movlw	16
  1236  0741                     u1005:	
  1237  0741  1003               	clrc
  1238  0742  0CB8               	rrf	??___ftmul+2,f
  1239  0743  0CB7               	rrf	??___ftmul+1,f
  1240  0744  0CB6               	rrf	??___ftmul,f
  1241  0745  3EFF               	addlw	-1
  1242  0746  1D03               	skipz
  1243  0747  2F41               	goto	u1005
  1244  0748  0836               	movf	??___ftmul,w
  1245  0749  00B9               	movwf	??___ftmul+3
  1246  074A  0839               	movf	??___ftmul+3,w
  1247  074B  00BF               	movwf	___ftmul@sign
  1248  074C  0833               	movf	___ftmul@f2,w
  1249  074D  00B6               	movwf	??___ftmul
  1250  074E  0834               	movf	___ftmul@f2+1,w
  1251  074F  00B7               	movwf	??___ftmul+1
  1252  0750  0835               	movf	___ftmul@f2+2,w
  1253  0751  00B8               	movwf	??___ftmul+2
  1254  0752  3010               	movlw	16
  1255  0753                     u1015:	
  1256  0753  1003               	clrc
  1257  0754  0CB8               	rrf	??___ftmul+2,f
  1258  0755  0CB7               	rrf	??___ftmul+1,f
  1259  0756  0CB6               	rrf	??___ftmul,f
  1260  0757  3EFF               	addlw	-1
  1261  0758  1D03               	skipz
  1262  0759  2F53               	goto	u1015
  1263  075A  0836               	movf	??___ftmul,w
  1264  075B  00B9               	movwf	??___ftmul+3
  1265  075C  0839               	movf	??___ftmul+3,w
  1266  075D  06BF               	xorwf	___ftmul@sign,f
  1267  075E  3080               	movlw	128
  1268  075F  00B6               	movwf	??___ftmul
  1269  0760  0836               	movf	??___ftmul,w
  1270  0761  05BF               	andwf	___ftmul@sign,f
  1271  0762  17B1               	bsf	___ftmul@f1+1,7
  1272  0763  17B4               	bsf	___ftmul@f2+1,7
  1273  0764  30FF               	movlw	255
  1274  0765  05B3               	andwf	___ftmul@f2,f
  1275  0766  30FF               	movlw	255
  1276  0767  05B4               	andwf	___ftmul@f2+1,f
  1277  0768  3000               	movlw	0
  1278  0769  05B5               	andwf	___ftmul@f2+2,f
  1279  076A  3000               	movlw	0
  1280  076B  00BB               	movwf	___ftmul@f3_as_product
  1281  076C  3000               	movlw	0
  1282  076D  00BC               	movwf	___ftmul@f3_as_product+1
  1283  076E  3000               	movlw	0
  1284  076F  00BD               	movwf	___ftmul@f3_as_product+2
  1285  0770  3007               	movlw	7
  1286  0771  00B6               	movwf	??___ftmul
  1287  0772  0836               	movf	??___ftmul,w
  1288  0773  00BE               	movwf	___ftmul@cntr
  1289  0774                     l987:	
  1290  0774  1C30               	btfss	___ftmul@f1,0
  1291  0775  2F84               	goto	l991
  1292  0776  0833               	movf	___ftmul@f2,w
  1293  0777  07BB               	addwf	___ftmul@f3_as_product,f
  1294  0778  0834               	movf	___ftmul@f2+1,w
  1295  0779  1103               	clrz
  1296  077A  1803               	skipnc
  1297  077B  0A34               	incf	___ftmul@f2+1,w
  1298  077C  1D03               	btfss	3,2
  1299  077D  07BC               	addwf	___ftmul@f3_as_product+1,f
  1300  077E  0835               	movf	___ftmul@f2+2,w
  1301  077F  1103               	clrz
  1302  0780  1803               	skipnc
  1303  0781  0A35               	incf	___ftmul@f2+2,w
  1304  0782  1D03               	btfss	3,2
  1305  0783  07BD               	addwf	___ftmul@f3_as_product+2,f
  1306  0784                     l991:	
  1307  0784  3001               	movlw	1
  1308  0785                     u1045:	
  1309  0785  1003               	clrc
  1310  0786  0CB2               	rrf	___ftmul@f1+2,f
  1311  0787  0CB1               	rrf	___ftmul@f1+1,f
  1312  0788  0CB0               	rrf	___ftmul@f1,f
  1313  0789  3EFF               	addlw	-1
  1314  078A  1D03               	skipz
  1315  078B  2F85               	goto	u1045
  1316  078C  3001               	movlw	1
  1317  078D                     u1055:	
  1318  078D  1003               	clrc
  1319  078E  0DB3               	rlf	___ftmul@f2,f
  1320  078F  0DB4               	rlf	___ftmul@f2+1,f
  1321  0790  0DB5               	rlf	___ftmul@f2+2,f
  1322  0791  3EFF               	addlw	-1
  1323  0792  1D03               	skipz
  1324  0793  2F8D               	goto	u1055
  1325  0794  3001               	movlw	1
  1326  0795  02BE               	subwf	___ftmul@cntr,f
  1327  0796  1D03               	btfss	3,2
  1328  0797  2F74               	goto	l987
  1329  0798  3009               	movlw	9
  1330  0799  00B6               	movwf	??___ftmul
  1331  079A  0836               	movf	??___ftmul,w
  1332  079B  00BE               	movwf	___ftmul@cntr
  1333  079C                     l999:	
  1334  079C  1C30               	btfss	___ftmul@f1,0
  1335  079D  2FAC               	goto	l1003
  1336  079E  0833               	movf	___ftmul@f2,w
  1337  079F  07BB               	addwf	___ftmul@f3_as_product,f
  1338  07A0  0834               	movf	___ftmul@f2+1,w
  1339  07A1  1103               	clrz
  1340  07A2  1803               	skipnc
  1341  07A3  0A34               	incf	___ftmul@f2+1,w
  1342  07A4  1D03               	btfss	3,2
  1343  07A5  07BC               	addwf	___ftmul@f3_as_product+1,f
  1344  07A6  0835               	movf	___ftmul@f2+2,w
  1345  07A7  1103               	clrz
  1346  07A8  1803               	skipnc
  1347  07A9  0A35               	incf	___ftmul@f2+2,w
  1348  07AA  1D03               	btfss	3,2
  1349  07AB  07BD               	addwf	___ftmul@f3_as_product+2,f
  1350  07AC                     l1003:	
  1351  07AC  3001               	movlw	1
  1352  07AD                     u1095:	
  1353  07AD  1003               	clrc
  1354  07AE  0CB2               	rrf	___ftmul@f1+2,f
  1355  07AF  0CB1               	rrf	___ftmul@f1+1,f
  1356  07B0  0CB0               	rrf	___ftmul@f1,f
  1357  07B1  3EFF               	addlw	-1
  1358  07B2  1D03               	skipz
  1359  07B3  2FAD               	goto	u1095
  1360  07B4  3001               	movlw	1
  1361  07B5                     u1105:	
  1362  07B5  1003               	clrc
  1363  07B6  0CBD               	rrf	___ftmul@f3_as_product+2,f
  1364  07B7  0CBC               	rrf	___ftmul@f3_as_product+1,f
  1365  07B8  0CBB               	rrf	___ftmul@f3_as_product,f
  1366  07B9  3EFF               	addlw	-1
  1367  07BA  1D03               	skipz
  1368  07BB  2FB5               	goto	u1105
  1369  07BC  3001               	movlw	1
  1370  07BD  02BE               	subwf	___ftmul@cntr,f
  1371  07BE  1D03               	btfss	3,2
  1372  07BF  2F9C               	goto	l999
  1373  07C0  083B               	movf	___ftmul@f3_as_product,w
  1374  07C1  00F0               	movwf	___ftpack@arg
  1375  07C2  083C               	movf	___ftmul@f3_as_product+1,w
  1376  07C3  00F1               	movwf	___ftpack@arg+1
  1377  07C4  083D               	movf	___ftmul@f3_as_product+2,w
  1378  07C5  00F2               	movwf	___ftpack@arg+2
  1379  07C6  083A               	movf	___ftmul@exp,w
  1380  07C7  00B6               	movwf	??___ftmul
  1381  07C8  0836               	movf	??___ftmul,w
  1382  07C9  00F3               	movwf	___ftpack@exp
  1383  07CA  083F               	movf	___ftmul@sign,w
  1384  07CB  00B7               	movwf	??___ftmul+1
  1385  07CC  0837               	movf	??___ftmul+1,w
  1386  07CD  00F4               	movwf	___ftpack@sign
  1387  07CE  120A  118A  2430   	fcall	___ftpack
  1388  07D1  0870               	movf	?___ftpack,w
  1389  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1390  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1391  07D4  00B0               	movwf	?___ftmul
  1392  07D5  0871               	movf	?___ftpack+1,w
  1393  07D6  00B1               	movwf	?___ftmul+1
  1394  07D7  0872               	movf	?___ftpack+2,w
  1395  07D8  00B2               	movwf	?___ftmul+2
  1396  07D9  0008               	return
  1397  07DA                     __end_of___ftmul:	
  1398                           
  1399                           	psect	text6
  1400  064F                     __ptext6:	
  1401 ;; *************** function ___ftdiv *****************
  1402 ;; Defined at:
  1403 ;;		line 56 in file "E:\software\pic\XC8\sources\common\ftdiv.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  f2              3    0[BANK0 ] float 
  1406 ;;  f1              3    3[BANK0 ] float 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  f3              3   11[BANK0 ] float 
  1409 ;;  sign            1   15[BANK0 ] unsigned char 
  1410 ;;  exp             1   14[BANK0 ] unsigned char 
  1411 ;;  cntr            1   10[BANK0 ] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  3    0[BANK0 ] float 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       6       0       0       0
  1422 ;;      Locals:         0       6       0       0       0
  1423 ;;      Temps:          0       4       0       0       0
  1424 ;;      Totals:         0      16       0       0       0
  1425 ;;Total ram usage:       16 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    1
  1428 ;; This function calls:
  1429 ;;		___ftpack
  1430 ;; This function is called by:
  1431 ;;		_set_PWM_duty_cycle
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function ___ftdiv
  1437  064F                     ___ftdiv:	
  1438                           
  1439                           ;incstack = 0
  1440                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1441  064F  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0650  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0651  0823               	movf	___ftdiv@f1,w
  1444  0652  00A6               	movwf	??___ftdiv
  1445  0653  0824               	movf	___ftdiv@f1+1,w
  1446  0654  00A7               	movwf	??___ftdiv+1
  1447  0655  0825               	movf	___ftdiv@f1+2,w
  1448  0656  00A8               	movwf	??___ftdiv+2
  1449  0657  1003               	clrc
  1450  0658  0D27               	rlf	??___ftdiv+1,w
  1451  0659  0D28               	rlf	??___ftdiv+2,w
  1452  065A  00A9               	movwf	??___ftdiv+3
  1453  065B  0829               	movf	??___ftdiv+3,w
  1454  065C  00AE               	movwf	___ftdiv@exp
  1455  065D  082E               	movf	___ftdiv@exp,w
  1456  065E  1D03               	btfss	3,2
  1457  065F  2E67               	goto	l927
  1458  0660  3000               	movlw	0
  1459  0661  00A0               	movwf	?___ftdiv
  1460  0662  3000               	movlw	0
  1461  0663  00A1               	movwf	?___ftdiv+1
  1462  0664  3000               	movlw	0
  1463  0665  00A2               	movwf	?___ftdiv+2
  1464  0666  0008               	return
  1465  0667                     l927:	
  1466  0667  0820               	movf	___ftdiv@f2,w
  1467  0668  00A6               	movwf	??___ftdiv
  1468  0669  0821               	movf	___ftdiv@f2+1,w
  1469  066A  00A7               	movwf	??___ftdiv+1
  1470  066B  0822               	movf	___ftdiv@f2+2,w
  1471  066C  00A8               	movwf	??___ftdiv+2
  1472  066D  1003               	clrc
  1473  066E  0D27               	rlf	??___ftdiv+1,w
  1474  066F  0D28               	rlf	??___ftdiv+2,w
  1475  0670  00A9               	movwf	??___ftdiv+3
  1476  0671  0829               	movf	??___ftdiv+3,w
  1477  0672  00AF               	movwf	___ftdiv@sign
  1478  0673  082F               	movf	___ftdiv@sign,w
  1479  0674  1D03               	btfss	3,2
  1480  0675  2E7D               	goto	l933
  1481  0676  3000               	movlw	0
  1482  0677  00A0               	movwf	?___ftdiv
  1483  0678  3000               	movlw	0
  1484  0679  00A1               	movwf	?___ftdiv+1
  1485  067A  3000               	movlw	0
  1486  067B  00A2               	movwf	?___ftdiv+2
  1487  067C  0008               	return
  1488  067D                     l933:	
  1489  067D  3000               	movlw	0
  1490  067E  00AB               	movwf	___ftdiv@f3
  1491  067F  3000               	movlw	0
  1492  0680  00AC               	movwf	___ftdiv@f3+1
  1493  0681  3000               	movlw	0
  1494  0682  00AD               	movwf	___ftdiv@f3+2
  1495  0683  3089               	movlw	137
  1496  0684  072F               	addwf	___ftdiv@sign,w
  1497  0685  00A6               	movwf	??___ftdiv
  1498  0686  0826               	movf	??___ftdiv,w
  1499  0687  02AE               	subwf	___ftdiv@exp,f
  1500  0688  0823               	movf	___ftdiv@f1,w
  1501  0689  00A6               	movwf	??___ftdiv
  1502  068A  0824               	movf	___ftdiv@f1+1,w
  1503  068B  00A7               	movwf	??___ftdiv+1
  1504  068C  0825               	movf	___ftdiv@f1+2,w
  1505  068D  00A8               	movwf	??___ftdiv+2
  1506  068E  3010               	movlw	16
  1507  068F                     u925:	
  1508  068F  1003               	clrc
  1509  0690  0CA8               	rrf	??___ftdiv+2,f
  1510  0691  0CA7               	rrf	??___ftdiv+1,f
  1511  0692  0CA6               	rrf	??___ftdiv,f
  1512  0693  3EFF               	addlw	-1
  1513  0694  1D03               	skipz
  1514  0695  2E8F               	goto	u925
  1515  0696  0826               	movf	??___ftdiv,w
  1516  0697  00A9               	movwf	??___ftdiv+3
  1517  0698  0829               	movf	??___ftdiv+3,w
  1518  0699  00AF               	movwf	___ftdiv@sign
  1519  069A  0820               	movf	___ftdiv@f2,w
  1520  069B  00A6               	movwf	??___ftdiv
  1521  069C  0821               	movf	___ftdiv@f2+1,w
  1522  069D  00A7               	movwf	??___ftdiv+1
  1523  069E  0822               	movf	___ftdiv@f2+2,w
  1524  069F  00A8               	movwf	??___ftdiv+2
  1525  06A0  3010               	movlw	16
  1526  06A1                     u935:	
  1527  06A1  1003               	clrc
  1528  06A2  0CA8               	rrf	??___ftdiv+2,f
  1529  06A3  0CA7               	rrf	??___ftdiv+1,f
  1530  06A4  0CA6               	rrf	??___ftdiv,f
  1531  06A5  3EFF               	addlw	-1
  1532  06A6  1D03               	skipz
  1533  06A7  2EA1               	goto	u935
  1534  06A8  0826               	movf	??___ftdiv,w
  1535  06A9  00A9               	movwf	??___ftdiv+3
  1536  06AA  0829               	movf	??___ftdiv+3,w
  1537  06AB  06AF               	xorwf	___ftdiv@sign,f
  1538  06AC  3080               	movlw	128
  1539  06AD  00A6               	movwf	??___ftdiv
  1540  06AE  0826               	movf	??___ftdiv,w
  1541  06AF  05AF               	andwf	___ftdiv@sign,f
  1542  06B0  17A4               	bsf	___ftdiv@f1+1,7
  1543  06B1  30FF               	movlw	255
  1544  06B2  05A3               	andwf	___ftdiv@f1,f
  1545  06B3  30FF               	movlw	255
  1546  06B4  05A4               	andwf	___ftdiv@f1+1,f
  1547  06B5  3000               	movlw	0
  1548  06B6  05A5               	andwf	___ftdiv@f1+2,f
  1549  06B7  17A1               	bsf	___ftdiv@f2+1,7
  1550  06B8  30FF               	movlw	255
  1551  06B9  05A0               	andwf	___ftdiv@f2,f
  1552  06BA  30FF               	movlw	255
  1553  06BB  05A1               	andwf	___ftdiv@f2+1,f
  1554  06BC  3000               	movlw	0
  1555  06BD  05A2               	andwf	___ftdiv@f2+2,f
  1556  06BE  3018               	movlw	24
  1557  06BF  00A6               	movwf	??___ftdiv
  1558  06C0  0826               	movf	??___ftdiv,w
  1559  06C1  00AA               	movwf	___ftdiv@cntr
  1560  06C2                     l947:	
  1561  06C2  3001               	movlw	1
  1562  06C3                     u945:	
  1563  06C3  1003               	clrc
  1564  06C4  0DAB               	rlf	___ftdiv@f3,f
  1565  06C5  0DAC               	rlf	___ftdiv@f3+1,f
  1566  06C6  0DAD               	rlf	___ftdiv@f3+2,f
  1567  06C7  3EFF               	addlw	-1
  1568  06C8  1D03               	skipz
  1569  06C9  2EC3               	goto	u945
  1570  06CA  0822               	movf	___ftdiv@f2+2,w
  1571  06CB  0225               	subwf	___ftdiv@f1+2,w
  1572  06CC  1D03               	skipz
  1573  06CD  2ED4               	goto	u955
  1574  06CE  0821               	movf	___ftdiv@f2+1,w
  1575  06CF  0224               	subwf	___ftdiv@f1+1,w
  1576  06D0  1D03               	skipz
  1577  06D1  2ED4               	goto	u955
  1578  06D2  0820               	movf	___ftdiv@f2,w
  1579  06D3  0223               	subwf	___ftdiv@f1,w
  1580  06D4                     u955:	
  1581  06D4  1C03               	skipc
  1582  06D5  2EE1               	goto	l955
  1583  06D6  0820               	movf	___ftdiv@f2,w
  1584  06D7  02A3               	subwf	___ftdiv@f1,f
  1585  06D8  0821               	movf	___ftdiv@f2+1,w
  1586  06D9  1C03               	skipc
  1587  06DA  0F21               	incfsz	___ftdiv@f2+1,w
  1588  06DB  02A4               	subwf	___ftdiv@f1+1,f
  1589  06DC  0822               	movf	___ftdiv@f2+2,w
  1590  06DD  1C03               	skipc
  1591  06DE  0A22               	incf	___ftdiv@f2+2,w
  1592  06DF  02A5               	subwf	___ftdiv@f1+2,f
  1593  06E0  142B               	bsf	___ftdiv@f3,0
  1594  06E1                     l955:	
  1595  06E1  3001               	movlw	1
  1596  06E2                     u965:	
  1597  06E2  1003               	clrc
  1598  06E3  0DA3               	rlf	___ftdiv@f1,f
  1599  06E4  0DA4               	rlf	___ftdiv@f1+1,f
  1600  06E5  0DA5               	rlf	___ftdiv@f1+2,f
  1601  06E6  3EFF               	addlw	-1
  1602  06E7  1D03               	skipz
  1603  06E8  2EE2               	goto	u965
  1604  06E9  3001               	movlw	1
  1605  06EA  02AA               	subwf	___ftdiv@cntr,f
  1606  06EB  1D03               	btfss	3,2
  1607  06EC  2EC2               	goto	l947
  1608  06ED  082B               	movf	___ftdiv@f3,w
  1609  06EE  00F0               	movwf	___ftpack@arg
  1610  06EF  082C               	movf	___ftdiv@f3+1,w
  1611  06F0  00F1               	movwf	___ftpack@arg+1
  1612  06F1  082D               	movf	___ftdiv@f3+2,w
  1613  06F2  00F2               	movwf	___ftpack@arg+2
  1614  06F3  082E               	movf	___ftdiv@exp,w
  1615  06F4  00A6               	movwf	??___ftdiv
  1616  06F5  0826               	movf	??___ftdiv,w
  1617  06F6  00F3               	movwf	___ftpack@exp
  1618  06F7  082F               	movf	___ftdiv@sign,w
  1619  06F8  00A7               	movwf	??___ftdiv+1
  1620  06F9  0827               	movf	??___ftdiv+1,w
  1621  06FA  00F4               	movwf	___ftpack@sign
  1622  06FB  120A  118A  2430   	fcall	___ftpack
  1623  06FE  0870               	movf	?___ftpack,w
  1624  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1626  0701  00A0               	movwf	?___ftdiv
  1627  0702  0871               	movf	?___ftpack+1,w
  1628  0703  00A1               	movwf	?___ftdiv+1
  1629  0704  0872               	movf	?___ftpack+2,w
  1630  0705  00A2               	movwf	?___ftdiv+2
  1631  0706  0008               	return
  1632  0707                     __end_of___ftdiv:	
  1633                           
  1634                           	psect	text7
  1635  034A                     __ptext7:	
  1636 ;; *************** function ___altoft *****************
  1637 ;; Defined at:
  1638 ;;		line 42 in file "E:\software\pic\XC8\sources\common\altoft.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  c               4    6[BANK0 ] long 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  sign            1   12[COMMON] unsigned char 
  1643 ;;  exp             1   11[COMMON] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  3    6[BANK0 ] float 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       4       0       0       0
  1654 ;;      Locals:         2       0       0       0       0
  1655 ;;      Temps:          2       0       0       0       0
  1656 ;;      Totals:         4       4       0       0       0
  1657 ;;Total ram usage:        8 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    1
  1660 ;; This function calls:
  1661 ;;		___ftpack
  1662 ;; This function is called by:
  1663 ;;		_set_PWM_duty_cycle
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function ___altoft
  1669  034A                     ___altoft:	
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  1673  034A  01FC               	clrf	___altoft@sign
  1674  034B  308E               	movlw	142
  1675  034C  00F9               	movwf	??___altoft
  1676  034D  0879               	movf	??___altoft,w
  1677  034E  00FB               	movwf	___altoft@exp
  1678  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0351  1FA9               	btfss	___altoft@c+3,7
  1681  0352  2B60               	goto	l915
  1682  0353  09A6               	comf	___altoft@c,f
  1683  0354  09A7               	comf	___altoft@c+1,f
  1684  0355  09A8               	comf	___altoft@c+2,f
  1685  0356  09A9               	comf	___altoft@c+3,f
  1686  0357  0AA6               	incf	___altoft@c,f
  1687  0358  1903               	skipnz
  1688  0359  0AA7               	incf	___altoft@c+1,f
  1689  035A  1903               	skipnz
  1690  035B  0AA8               	incf	___altoft@c+2,f
  1691  035C  1903               	skipnz
  1692  035D  0AA9               	incf	___altoft@c+3,f
  1693  035E  01FC               	clrf	___altoft@sign
  1694  035F  0AFC               	incf	___altoft@sign,f
  1695  0360                     l915:	
  1696  0360  30FF               	movlw	255
  1697  0361  0529               	andwf	___altoft@c+3,w
  1698  0362  1903               	btfsc	3,2
  1699  0363  2B72               	goto	l917
  1700  0364  3001               	movlw	1
  1701  0365                     u885:	
  1702  0365  1003               	clrc
  1703  0366  0CA9               	rrf	___altoft@c+3,f
  1704  0367  0CA8               	rrf	___altoft@c+2,f
  1705  0368  0CA7               	rrf	___altoft@c+1,f
  1706  0369  0CA6               	rrf	___altoft@c,f
  1707  036A  3EFF               	addlw	-1
  1708  036B  1D03               	skipz
  1709  036C  2B65               	goto	u885
  1710  036D  3001               	movlw	1
  1711  036E  00F9               	movwf	??___altoft
  1712  036F  0879               	movf	??___altoft,w
  1713  0370  07FB               	addwf	___altoft@exp,f
  1714  0371  2B60               	goto	l915
  1715  0372                     l917:	
  1716  0372  0826               	movf	___altoft@c,w
  1717  0373  00F0               	movwf	___ftpack@arg
  1718  0374  0827               	movf	___altoft@c+1,w
  1719  0375  00F1               	movwf	___ftpack@arg+1
  1720  0376  0828               	movf	___altoft@c+2,w
  1721  0377  00F2               	movwf	___ftpack@arg+2
  1722  0378  087B               	movf	___altoft@exp,w
  1723  0379  00F9               	movwf	??___altoft
  1724  037A  0879               	movf	??___altoft,w
  1725  037B  00F3               	movwf	___ftpack@exp
  1726  037C  087C               	movf	___altoft@sign,w
  1727  037D  00FA               	movwf	??___altoft+1
  1728  037E  087A               	movf	??___altoft+1,w
  1729  037F  00F4               	movwf	___ftpack@sign
  1730  0380  120A  118A  2430   	fcall	___ftpack
  1731  0383  0870               	movf	?___ftpack,w
  1732  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0386  00A6               	movwf	?___altoft
  1735  0387  0871               	movf	?___ftpack+1,w
  1736  0388  00A7               	movwf	?___altoft+1
  1737  0389  0872               	movf	?___ftpack+2,w
  1738  038A  00A8               	movwf	?___altoft+2
  1739  038B  0008               	return
  1740  038C                     __end_of___altoft:	
  1741                           
  1742                           	psect	text8
  1743  0430                     __ptext8:	
  1744 ;; *************** function ___ftpack *****************
  1745 ;; Defined at:
  1746 ;;		line 62 in file "E:\software\pic\XC8\sources\common\float.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  arg             3    0[COMMON] unsigned um
  1749 ;;  exp             1    3[COMMON] unsigned char 
  1750 ;;  sign            1    4[COMMON] unsigned char 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  3    0[COMMON] float 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         5       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0
  1764 ;;      Temps:          3       0       0       0       0
  1765 ;;      Totals:         8       0       0       0       0
  1766 ;;Total ram usage:        8 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		___altoft
  1772 ;;		___ftdiv
  1773 ;;		___ftmul
  1774 ;;		___lwtoft
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function ___ftpack
  1780  0430                     ___ftpack:	
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1784  0430  0873               	movf	___ftpack@exp,w
  1785  0431  1903               	btfsc	3,2
  1786  0432  2C38               	goto	l837
  1787  0433  0872               	movf	___ftpack@arg+2,w
  1788  0434  0471               	iorwf	___ftpack@arg+1,w
  1789  0435  0470               	iorwf	___ftpack@arg,w
  1790  0436  1D03               	skipz
  1791  0437  2C4B               	goto	l843
  1792  0438                     l837:	
  1793  0438  3000               	movlw	0
  1794  0439  00F0               	movwf	?___ftpack
  1795  043A  3000               	movlw	0
  1796  043B  00F1               	movwf	?___ftpack+1
  1797  043C  3000               	movlw	0
  1798  043D  00F2               	movwf	?___ftpack+2
  1799  043E  0008               	return
  1800  043F                     l841:	
  1801  043F  3001               	movlw	1
  1802  0440  00F5               	movwf	??___ftpack
  1803  0441  0875               	movf	??___ftpack,w
  1804  0442  07F3               	addwf	___ftpack@exp,f
  1805  0443  3001               	movlw	1
  1806  0444                     u675:	
  1807  0444  1003               	clrc
  1808  0445  0CF2               	rrf	___ftpack@arg+2,f
  1809  0446  0CF1               	rrf	___ftpack@arg+1,f
  1810  0447  0CF0               	rrf	___ftpack@arg,f
  1811  0448  3EFF               	addlw	-1
  1812  0449  1D03               	skipz
  1813  044A  2C44               	goto	u675
  1814  044B                     l843:	
  1815  044B  30FE               	movlw	254
  1816  044C  0572               	andwf	___ftpack@arg+2,w
  1817  044D  1903               	btfsc	3,2
  1818  044E  2C66               	goto	l318
  1819  044F  2C3F               	goto	l841
  1820  0450                     l845:	
  1821  0450  3001               	movlw	1
  1822  0451  00F5               	movwf	??___ftpack
  1823  0452  0875               	movf	??___ftpack,w
  1824  0453  07F3               	addwf	___ftpack@exp,f
  1825  0454  3001               	movlw	1
  1826  0455  07F0               	addwf	___ftpack@arg,f
  1827  0456  3000               	movlw	0
  1828  0457  1803               	skipnc
  1829  0458  3001               	movlw	1
  1830  0459  07F1               	addwf	___ftpack@arg+1,f
  1831  045A  3000               	movlw	0
  1832  045B  1803               	skipnc
  1833  045C  3001               	movlw	1
  1834  045D  07F2               	addwf	___ftpack@arg+2,f
  1835  045E  3001               	movlw	1
  1836  045F                     u695:	
  1837  045F  1003               	clrc
  1838  0460  0CF2               	rrf	___ftpack@arg+2,f
  1839  0461  0CF1               	rrf	___ftpack@arg+1,f
  1840  0462  0CF0               	rrf	___ftpack@arg,f
  1841  0463  3EFF               	addlw	-1
  1842  0464  1D03               	skipz
  1843  0465  2C5F               	goto	u695
  1844  0466                     l318:	
  1845  0466  30FF               	movlw	255
  1846  0467  0572               	andwf	___ftpack@arg+2,w
  1847  0468  1903               	btfsc	3,2
  1848  0469  2C75               	goto	l853
  1849  046A  2C50               	goto	l845
  1850  046B                     l851:	
  1851  046B  3001               	movlw	1
  1852  046C  02F3               	subwf	___ftpack@exp,f
  1853  046D  3001               	movlw	1
  1854  046E                     u715:	
  1855  046E  1003               	clrc
  1856  046F  0DF0               	rlf	___ftpack@arg,f
  1857  0470  0DF1               	rlf	___ftpack@arg+1,f
  1858  0471  0DF2               	rlf	___ftpack@arg+2,f
  1859  0472  3EFF               	addlw	-1
  1860  0473  1D03               	skipz
  1861  0474  2C6E               	goto	u715
  1862  0475                     l853:	
  1863  0475  1BF1               	btfsc	___ftpack@arg+1,7
  1864  0476  2C7B               	goto	l325
  1865  0477  3002               	movlw	2
  1866  0478  0273               	subwf	___ftpack@exp,w
  1867  0479  1803               	skipnc
  1868  047A  2C6B               	goto	l851
  1869  047B                     l325:	
  1870  047B  1873               	btfsc	___ftpack@exp,0
  1871  047C  2C83               	goto	l326
  1872  047D  30FF               	movlw	255
  1873  047E  05F0               	andwf	___ftpack@arg,f
  1874  047F  307F               	movlw	127
  1875  0480  05F1               	andwf	___ftpack@arg+1,f
  1876  0481  30FF               	movlw	255
  1877  0482  05F2               	andwf	___ftpack@arg+2,f
  1878  0483                     l326:	
  1879  0483  1003               	clrc
  1880  0484  0CF3               	rrf	___ftpack@exp,f
  1881  0485  0873               	movf	___ftpack@exp,w
  1882  0486  00F5               	movwf	??___ftpack
  1883  0487  01F6               	clrf	??___ftpack+1
  1884  0488  01F7               	clrf	??___ftpack+2
  1885  0489  3010               	movlw	16
  1886  048A                     u755:	
  1887  048A  1003               	clrc
  1888  048B  0DF5               	rlf	??___ftpack,f
  1889  048C  0DF6               	rlf	??___ftpack+1,f
  1890  048D  0DF7               	rlf	??___ftpack+2,f
  1891  048E  3EFF               	addlw	-1
  1892  048F  1D03               	skipz
  1893  0490  2C8A               	goto	u755
  1894  0491  0875               	movf	??___ftpack,w
  1895  0492  04F0               	iorwf	___ftpack@arg,f
  1896  0493  0876               	movf	??___ftpack+1,w
  1897  0494  04F1               	iorwf	___ftpack@arg+1,f
  1898  0495  0877               	movf	??___ftpack+2,w
  1899  0496  04F2               	iorwf	___ftpack@arg+2,f
  1900  0497  0874               	movf	___ftpack@sign,w
  1901  0498  1903               	btfsc	3,2
  1902  0499  0008               	return
  1903  049A  17F2               	bsf	___ftpack@arg+2,7
  1904  049B  0008               	return
  1905  049C                     __end_of___ftpack:	
  1906                           
  1907                           	psect	text9
  1908  052A                     __ptext9:	
  1909 ;; *************** function ___aldiv *****************
  1910 ;; Defined at:
  1911 ;;		line 6 in file "E:\software\pic\XC8\sources\common\aldiv.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  divisor         4    0[COMMON] long 
  1914 ;;  dividend        4    4[COMMON] long 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  quotient        4    2[BANK0 ] long 
  1917 ;;  sign            1    1[BANK0 ] unsigned char 
  1918 ;;  counter         1    0[BANK0 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  4    0[COMMON] long 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         8       0       0       0       0
  1929 ;;      Locals:         0       6       0       0       0
  1930 ;;      Temps:          1       0       0       0       0
  1931 ;;      Totals:         9       6       0       0       0
  1932 ;;Total ram usage:       15 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_PWM_Initialize
  1938 ;;		_set_PWM_duty_cycle
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function ___aldiv
  1944  052A                     ___aldiv:	
  1945                           
  1946                           ;incstack = 0
  1947                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1948  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1949  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1950  052C  01A1               	clrf	___aldiv@sign
  1951  052D  1FF3               	btfss	___aldiv@divisor+3,7
  1952  052E  2D3C               	goto	l212
  1953  052F  09F0               	comf	___aldiv@divisor,f
  1954  0530  09F1               	comf	___aldiv@divisor+1,f
  1955  0531  09F2               	comf	___aldiv@divisor+2,f
  1956  0532  09F3               	comf	___aldiv@divisor+3,f
  1957  0533  0AF0               	incf	___aldiv@divisor,f
  1958  0534  1903               	skipnz
  1959  0535  0AF1               	incf	___aldiv@divisor+1,f
  1960  0536  1903               	skipnz
  1961  0537  0AF2               	incf	___aldiv@divisor+2,f
  1962  0538  1903               	skipnz
  1963  0539  0AF3               	incf	___aldiv@divisor+3,f
  1964  053A  01A1               	clrf	___aldiv@sign
  1965  053B  0AA1               	incf	___aldiv@sign,f
  1966  053C                     l212:	
  1967  053C  1FF7               	btfss	___aldiv@dividend+3,7
  1968  053D  2D4D               	goto	l875
  1969  053E  09F4               	comf	___aldiv@dividend,f
  1970  053F  09F5               	comf	___aldiv@dividend+1,f
  1971  0540  09F6               	comf	___aldiv@dividend+2,f
  1972  0541  09F7               	comf	___aldiv@dividend+3,f
  1973  0542  0AF4               	incf	___aldiv@dividend,f
  1974  0543  1903               	skipnz
  1975  0544  0AF5               	incf	___aldiv@dividend+1,f
  1976  0545  1903               	skipnz
  1977  0546  0AF6               	incf	___aldiv@dividend+2,f
  1978  0547  1903               	skipnz
  1979  0548  0AF7               	incf	___aldiv@dividend+3,f
  1980  0549  3001               	movlw	1
  1981  054A  00F8               	movwf	??___aldiv
  1982  054B  0878               	movf	??___aldiv,w
  1983  054C  06A1               	xorwf	___aldiv@sign,f
  1984  054D                     l875:	
  1985  054D  3000               	movlw	0
  1986  054E  00A5               	movwf	___aldiv@quotient+3
  1987  054F  3000               	movlw	0
  1988  0550  00A4               	movwf	___aldiv@quotient+2
  1989  0551  3000               	movlw	0
  1990  0552  00A3               	movwf	___aldiv@quotient+1
  1991  0553  3000               	movlw	0
  1992  0554  00A2               	movwf	___aldiv@quotient
  1993  0555  0873               	movf	___aldiv@divisor+3,w
  1994  0556  0472               	iorwf	___aldiv@divisor+2,w
  1995  0557  0471               	iorwf	___aldiv@divisor+1,w
  1996  0558  0470               	iorwf	___aldiv@divisor,w
  1997  0559  1903               	skipnz
  1998  055A  2DA2               	goto	l897
  1999  055B  01A0               	clrf	___aldiv@counter
  2000  055C  0AA0               	incf	___aldiv@counter,f
  2001  055D                     l883:	
  2002  055D  1BF3               	btfsc	___aldiv@divisor+3,7
  2003  055E  2D6D               	goto	l885
  2004  055F  3001               	movlw	1
  2005  0560  00F8               	movwf	??___aldiv
  2006  0561                     u805:	
  2007  0561  1003               	clrc
  2008  0562  0DF0               	rlf	___aldiv@divisor,f
  2009  0563  0DF1               	rlf	___aldiv@divisor+1,f
  2010  0564  0DF2               	rlf	___aldiv@divisor+2,f
  2011  0565  0DF3               	rlf	___aldiv@divisor+3,f
  2012  0566  0BF8               	decfsz	??___aldiv,f
  2013  0567  2D61               	goto	u805
  2014  0568  3001               	movlw	1
  2015  0569  00F8               	movwf	??___aldiv
  2016  056A  0878               	movf	??___aldiv,w
  2017  056B  07A0               	addwf	___aldiv@counter,f
  2018  056C  2D5D               	goto	l883
  2019  056D                     l885:	
  2020  056D  3001               	movlw	1
  2021  056E  00F8               	movwf	??___aldiv
  2022  056F                     u825:	
  2023  056F  1003               	clrc
  2024  0570  0DA2               	rlf	___aldiv@quotient,f
  2025  0571  0DA3               	rlf	___aldiv@quotient+1,f
  2026  0572  0DA4               	rlf	___aldiv@quotient+2,f
  2027  0573  0DA5               	rlf	___aldiv@quotient+3,f
  2028  0574  0BF8               	decfsz	??___aldiv,f
  2029  0575  2D6F               	goto	u825
  2030  0576  0873               	movf	___aldiv@divisor+3,w
  2031  0577  0277               	subwf	___aldiv@dividend+3,w
  2032  0578  1D03               	skipz
  2033  0579  2D84               	goto	u835
  2034  057A  0872               	movf	___aldiv@divisor+2,w
  2035  057B  0276               	subwf	___aldiv@dividend+2,w
  2036  057C  1D03               	skipz
  2037  057D  2D84               	goto	u835
  2038  057E  0871               	movf	___aldiv@divisor+1,w
  2039  057F  0275               	subwf	___aldiv@dividend+1,w
  2040  0580  1D03               	skipz
  2041  0581  2D84               	goto	u835
  2042  0582  0870               	movf	___aldiv@divisor,w
  2043  0583  0274               	subwf	___aldiv@dividend,w
  2044  0584                     u835:	
  2045  0584  1C03               	skipc
  2046  0585  2D95               	goto	l893
  2047  0586  0870               	movf	___aldiv@divisor,w
  2048  0587  02F4               	subwf	___aldiv@dividend,f
  2049  0588  0871               	movf	___aldiv@divisor+1,w
  2050  0589  1C03               	skipc
  2051  058A  0F71               	incfsz	___aldiv@divisor+1,w
  2052  058B  02F5               	subwf	___aldiv@dividend+1,f
  2053  058C  0872               	movf	___aldiv@divisor+2,w
  2054  058D  1C03               	skipc
  2055  058E  0F72               	incfsz	___aldiv@divisor+2,w
  2056  058F  02F6               	subwf	___aldiv@dividend+2,f
  2057  0590  0873               	movf	___aldiv@divisor+3,w
  2058  0591  1C03               	skipc
  2059  0592  0F73               	incfsz	___aldiv@divisor+3,w
  2060  0593  02F7               	subwf	___aldiv@dividend+3,f
  2061  0594  1422               	bsf	___aldiv@quotient,0
  2062  0595                     l893:	
  2063  0595  3001               	movlw	1
  2064  0596                     u845:	
  2065  0596  1003               	clrc
  2066  0597  0CF3               	rrf	___aldiv@divisor+3,f
  2067  0598  0CF2               	rrf	___aldiv@divisor+2,f
  2068  0599  0CF1               	rrf	___aldiv@divisor+1,f
  2069  059A  0CF0               	rrf	___aldiv@divisor,f
  2070  059B  3EFF               	addlw	-1
  2071  059C  1D03               	skipz
  2072  059D  2D96               	goto	u845
  2073  059E  3001               	movlw	1
  2074  059F  02A0               	subwf	___aldiv@counter,f
  2075  05A0  1D03               	btfss	3,2
  2076  05A1  2D6D               	goto	l885
  2077  05A2                     l897:	
  2078  05A2  0821               	movf	___aldiv@sign,w
  2079  05A3  1903               	btfsc	3,2
  2080  05A4  2DB0               	goto	l901
  2081  05A5  09A2               	comf	___aldiv@quotient,f
  2082  05A6  09A3               	comf	___aldiv@quotient+1,f
  2083  05A7  09A4               	comf	___aldiv@quotient+2,f
  2084  05A8  09A5               	comf	___aldiv@quotient+3,f
  2085  05A9  0AA2               	incf	___aldiv@quotient,f
  2086  05AA  1903               	skipnz
  2087  05AB  0AA3               	incf	___aldiv@quotient+1,f
  2088  05AC  1903               	skipnz
  2089  05AD  0AA4               	incf	___aldiv@quotient+2,f
  2090  05AE  1903               	skipnz
  2091  05AF  0AA5               	incf	___aldiv@quotient+3,f
  2092  05B0                     l901:	
  2093  05B0  0825               	movf	___aldiv@quotient+3,w
  2094  05B1  00F3               	movwf	?___aldiv+3
  2095  05B2  0824               	movf	___aldiv@quotient+2,w
  2096  05B3  00F2               	movwf	?___aldiv+2
  2097  05B4  0823               	movf	___aldiv@quotient+1,w
  2098  05B5  00F1               	movwf	?___aldiv+1
  2099  05B6  0822               	movf	___aldiv@quotient,w
  2100  05B7  00F0               	movwf	?___aldiv
  2101  05B8  0008               	return
  2102  05B9                     __end_of___aldiv:	
  2103                           
  2104                           	psect	text10
  2105  0321                     __ptext10:	
  2106 ;; *************** function _ADC_Read *****************
  2107 ;; Defined at:
  2108 ;;		line 84 in file "main.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  channel         1    wreg     unsigned char 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  channel         1    4[COMMON] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2    0[COMMON] unsigned int 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2122 ;;      Params:         2       0       0       0       0
  2123 ;;      Locals:         1       0       0       0       0
  2124 ;;      Temps:          2       0       0       0       0
  2125 ;;      Totals:         5       0       0       0       0
  2126 ;;Total ram usage:        5 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _ADC_Read
  2137  0321                     _ADC_Read:	
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2141                           ;ADC_Read@channel stored from wreg
  2142  0321  00F4               	movwf	ADC_Read@channel
  2143                           
  2144                           ;main.c: 88: ADCON0 &= 0x11000101;
  2145  0322  3001               	movlw	1
  2146  0323  00F2               	movwf	??_ADC_Read
  2147  0324  0872               	movf	??_ADC_Read,w
  2148  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0327  059F               	andwf	31,f	;volatile
  2151                           
  2152                           ;main.c: 89: ADCON0 |= (unsigned)channel<<3;
  2153  0328  0874               	movf	ADC_Read@channel,w
  2154  0329  00F2               	movwf	??_ADC_Read
  2155  032A  3002               	movlw	2
  2156  032B                     u1265:	
  2157  032B  1003               	clrc
  2158  032C  0DF2               	rlf	??_ADC_Read,f
  2159  032D  3EFF               	addlw	-1
  2160  032E  1D03               	skipz
  2161  032F  2B2B               	goto	u1265
  2162  0330  1003               	clrc
  2163  0331  0D72               	rlf	??_ADC_Read,w
  2164  0332  00F3               	movwf	??_ADC_Read+1
  2165  0333  0873               	movf	??_ADC_Read+1,w
  2166  0334  049F               	iorwf	31,f	;volatile
  2167                           
  2168                           ;main.c: 90: _delay((unsigned long)((2)*(4000000/4000.0)));
  2169  0335  3003               	movlw	3
  2170  0336  00F3               	movwf	??_ADC_Read+1
  2171  0337  3097               	movlw	151
  2172  0338  00F2               	movwf	??_ADC_Read
  2173  0339                     u1307:	
  2174  0339  0BF2               	decfsz	??_ADC_Read,f
  2175  033A  2B39               	goto	u1307
  2176  033B  0BF3               	decfsz	??_ADC_Read+1,f
  2177  033C  2B39               	goto	u1307
  2178  033D  2B3E               	nop2
  2179                           
  2180                           ;main.c: 91: GO_nDONE = 1;
  2181  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2182  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0340  149F               	bsf	31,1	;volatile
  2184  0341                     l70:	
  2185                           ;main.c: 92: while(GO_nDONE);
  2186                           
  2187  0341  189F               	btfsc	31,1	;volatile
  2188  0342  2B41               	goto	l70
  2189                           
  2190                           ;main.c: 93: return (uint16_t)((ADRESH<<8)+ADRESL);
  2191  0343  081E               	movf	30,w	;volatile
  2192  0344  00F1               	movwf	?_ADC_Read+1
  2193  0345  1683               	bsf	3,5	;RP0=1, select bank1
  2194  0346  1303               	bcf	3,6	;RP1=0, select bank1
  2195  0347  081E               	movf	30,w	;volatile
  2196  0348  00F0               	movwf	?_ADC_Read
  2197  0349  0008               	return
  2198  034A                     __end_of_ADC_Read:	
  2199                           
  2200                           	psect	text11
  2201  02FE                     __ptext11:	
  2202 ;; *************** function _ADC_Initialize *****************
  2203 ;; Defined at:
  2204 ;;		line 75 in file "main.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0
  2221 ;;      Totals:         0       0       0       0       0
  2222 ;;Total ram usage:        0 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function _ADC_Initialize
  2233  02FE                     _ADC_Initialize:	
  2234                           
  2235                           ;main.c: 77: ADCON0 = 0b01000001;
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _ADC_Initialize: [wreg]
  2239  02FE  3041               	movlw	65
  2240  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0301  009F               	movwf	31	;volatile
  2243                           
  2244                           ;main.c: 78: ADCON1 = 0b11000000;
  2245  0302  30C0               	movlw	192
  2246  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0304  1303               	bcf	3,6	;RP1=0, select bank1
  2248  0305  009F               	movwf	31	;volatile
  2249                           
  2250                           ;main.c: 79: ANSELbits.ANS0 = 1;
  2251  0306  1683               	bsf	3,5	;RP0=1, select bank3
  2252  0307  1703               	bsf	3,6	;RP1=1, select bank3
  2253  0308  1408               	bsf	8,0	;volatile
  2254                           
  2255                           ;main.c: 80: TRISAbits.TRISA0 = 1;
  2256  0309  1683               	bsf	3,5	;RP0=1, select bank1
  2257  030A  1303               	bcf	3,6	;RP1=0, select bank1
  2258  030B  1405               	bsf	5,0	;volatile
  2259  030C  0008               	return
  2260  030D                     __end_of_ADC_Initialize:	
  2261                           ;main.c: 81: return;
  2262                           
  2263  007E                     btemp	set	126	;btemp
  2264  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     68      74
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _set_PWM_duty_cycle->___altoft
    ___lwtoft->___ftpack
    ___fttol->___altoft
    ___ftmul->___altoft
    ___ftdiv->___lwtoft
    ___altoft->___aldiv

Critical Paths under _main in BANK0

    _main->_PWM_Initialize
    _PWM_Initialize->_set_PWM_duty_cycle
    _set_PWM_duty_cycle->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___altoft->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   21879
                                             62 BANK0      6     6      0
                     _ADC_Initialize
                           _ADC_Read
                     _PWM_Initialize
                 _set_PWM_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                      10     4      6   11247
                                             52 BANK0     10     4      6
                            ___aldiv
                 _set_PWM_duty_cycle
 ---------------------------------------------------------------------------------
 (1) _set_PWM_duty_cycle                                   6     4      2   10519
                                             46 BANK0      6     4      2
                            ___aldiv
                           ___altoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2156
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     316
                                             32 BANK0     14    10      4
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2524
                                             16 BANK0     16    10      6
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2478
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    2272
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     556
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _PWM_Initialize
     ___aldiv
     _set_PWM_duty_cycle
       ___aldiv
       ___altoft
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _set_PWM_duty_cycle
     ___aldiv
     ___altoft
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     44      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      57      12        0.0%
ABS                  0      0      57       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Oct 09 19:59:04 2021

                  ___altoft@exp 007B         __size_of_PWM_Initialize 0051                     __CFG_CP$OFF 0000  
                 ___altoft@sign 007C                              l70 0341                     __CFG_LVP$ON 0000  
                           l212 053C                             l325 047B                             l326 0483  
                           l318 0466                             l409 0510                             l901 05B0  
                           l841 043F                             l851 046B                             l843 044B  
                           l915 0360                             l853 0475                             l845 0450  
                           l837 0438                             l917 0372                             l933 067D  
                           l927 0667                             l883 055D                             l875 054D  
                           l955 06E1                             l947 06C2                             l893 0595  
                           l885 056D                             l991 0784                             l975 0735  
                           l897 05A2                             l969 071F                             l987 0774  
                           l999 079C                             _PR2 0092                    __CFG_CPD$OFF 0000  
                           u715 046E                             u805 0561                             u825 056F  
                           u835 0584                             u755 048A                             u675 0444  
                           u845 0596                             u925 068F                             u695 045F  
                           u935 06A1                             u945 06C3                             u955 06D4  
                           u885 0365                             u965 06E2                    ___ftdiv@cntr 002A  
                  ___ftdiv@sign 002F                            l1003 07AC                            l1051 0521  
                          l1019 04B6                            l1045 0505                            l1037 04E8  
                          l1047 0513                            l1039 04F8                            l1127 0424  
                          l1119 0403                            u1005 0741                            u1015 0753  
                          u1105 07B5                            u1045 0785                            u1055 078D  
                          u1135 04BD                            u1307 0339                            u1235 05F7  
                          u1165 04E9                            u1245 0397                            u1095 07AD  
                          u1255 03A0                            u1265 032B                            u1195 0507  
                          u1285 0415                            u1297 042A                    __CFG_WRT$OFF 0000  
                          _main 03DD                    ___ftpack@arg 0070                    ___ftpack@exp 0073  
                          btemp 007E                __end_of_ADC_Read 034A                            start 0000  
                 __CFG_IESO$OFF 0000                   __CFG_MCLRE$ON 0000                    ___ftmul@cntr 003E  
                  ___ftmul@sign 003F                    ___fttol@exp1 004D                    ___fttol@lval 0049  
               __end_of___aldiv 05B9                           ?_main 0070                   __CFG_WDTE$OFF 0000  
               __end_of___ftdiv 0707                           _ANSEL 0188                 __end_of___ftmul 07DA  
               __end_of___fttol 052A                           _TRISB 0086                           _TRISC 0087  
                __CFG_FCMEN$OFF 0000                   ___ftpack@sign 0074                  __CFG_BOREN$OFF 0000  
                         status 0003                           wtemp0 007E                   main@adc_value 0060  
               __initialization 07DA                    __end_of_main 0430                          ??_main 005E  
                 ___fttol@sign1 0048                          _ADCON0 001F                          _ADCON1 009F  
              __end_of___altoft 038C                          _ADRESH 001E                          _ADRESL 009E  
                        _CCPR1L 0015                __end_of___ftpack 049C                          _ANSELH 0189  
              __end_of___lwtoft 0321                          _TRISB2 0432                          _TRISC2 043A  
                __CFG_PWRTE$OFF 0000                       ??___aldiv 0078                  _PWM_Initialize 038C  
                     ??___ftdiv 0026                       ??___ftmul 0036                       ??___fttol 0044  
               ADC_Read@channel 0074           ___ftmul@f3_as_product 003B                       ?_ADC_Read 0070  
        PWM_Initialize@PWM_freq 0054         __end_of__initialization 07FC                      ___altoft@c 0026  
                    ___ftdiv@f1 0023                      ___ftdiv@f2 0020                      ___ftdiv@f3 002B  
                    ___ftmul@f1 0030                      ___ftmul@f2 0033          __end_of_PWM_Initialize 03DD  
                    ___fttol@f1 0040                  __pcstackCOMMON 0070                    __pidataBANK0 02F8  
                    ___lwtoft@c 0078  PWM_Initialize@init_pulse_width 0058                      ??_ADC_Read 0072  
    __end_of_set_PWM_duty_cycle 064F                 ?_PWM_Initialize 0054                      __pmaintext 03DD  
                     ?___altoft 0026                       ?___ftpack 0070         __size_of_ADC_Initialize 000F  
                     ?___lwtoft 0078                         ___aldiv 052A          set_PWM_duty_cycle@duty 004E  
                       ___ftdiv 064F                         ___ftmul 0707                         ___fttol 049C  
                    ??___altoft 0079                      ??___ftpack 0075                       _ANSELbits 0188  
                       __ptext1 038C                         __ptext2 05B9                         __ptext3 030D  
                       __ptext4 049C                         __ptext5 0707                         __ptext6 064F  
                       __ptext7 034A                         __ptext8 0430                         __ptext9 052A  
                    ??___lwtoft 007B                       _T2CONbits 0012                ___aldiv@dividend 0074  
          end_of_initialization 07FC                ___aldiv@quotient 0022                       _TRISAbits 0085  
             __size_of_ADC_Read 0029                     _CCP1CONbits 0017                     ___ftdiv@exp 002E  
                   ___ftmul@exp 003A                  _ADC_Initialize 02FE             start_initialization 07DA  
              ??_PWM_Initialize 005A        __CFG_FOSC$INTRC_NOCLKOUT 0000              _set_PWM_duty_cycle 05B9  
        __end_of_ADC_Initialize 030D                     __pdataBANK0 0064             ?_set_PWM_duty_cycle 004E  
             __size_of___altoft 0042               __size_of___ftpack 006C                       ___latbits 0002  
             __size_of___lwtoft 0014                   __pcstackBANK0 0020            ??_set_PWM_duty_cycle 0050  
                      ?___aldiv 0070                        ?___ftdiv 0020                        ?___ftmul 0030  
                      ?___fttol 0040                 ?_ADC_Initialize 0070                _init_pulse_width 0064  
                      _ADC_Read 0321                 ___aldiv@divisor 0070                 ___aldiv@counter 0020  
                      _GO_nDONE 00F9                        _PWM_freq 0066                __size_of___aldiv 008F  
              __size_of___ftdiv 00B8                        ___altoft 034A                __size_of___ftmul 00D3  
              __size_of___fttol 008E                        ___ftpack 0430                        ___lwtoft 030D  
                      __ptext10 0321                        __ptext11 02FE               __CFG_BOR4V$BOR40V 0000  
                 __size_of_main 0053                ??_ADC_Initialize 0070                 main@pulse_width 0062  
                  ___aldiv@sign 0021     __size_of_set_PWM_duty_cycle 0096  
